{"id":"src/modal.js","dependencies":[{"name":"C:\\codes\\Course\\budget\\package.json","includedInParent":true,"mtime":1672219063585}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transactionType = exports.Transaction = void 0;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar transactionType = {\n  INCOME: \"INCOME\",\n  EXPENSE: \"EXPENSE\"\n};\nexports.transactionType = transactionType;\nvar Transaction = /*#__PURE__*/_createClass(function Transaction(type, value) {\n  _classCallCheck(this, Transaction);\n  _defineProperty(this, \"value\", void 0);\n  _defineProperty(this, \"type\", void 0);\n  _defineProperty(this, \"id\", void 0);\n  _defineProperty(this, \"timespan\", void 0);\n  if (typeof value !== \"number\" || isNaN(value)) {\n    throw new TypeError(\"value sholud be a number\");\n  }\n  this.value = value;\n  if (!(type in transactionType)) {\n    throw new TypeError(\"type sholud only INCOME or EXPENSE\");\n  }\n  this.type = type;\n  this.id = \"\".concat(type, \"-\").concat(value, \"-\").concat(Math.random().toFixed(4) * 100);\n  this.timespan = Date.now();\n});\nexports.Transaction = Transaction;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":0},"source":"src/modal.js","original":{"line":1,"column":7}},{"generated":{"line":14,"column":4},"source":"src/modal.js","original":{"line":1,"column":13},"name":"transactionType"},{"generated":{"line":14,"column":19},"source":"src/modal.js","original":{"line":1,"column":28}},{"generated":{"line":14,"column":22},"source":"src/modal.js","original":{"line":1,"column":31}},{"generated":{"line":15,"column":2},"source":"src/modal.js","original":{"line":2,"column":4},"name":"INCOME"},{"generated":{"line":15,"column":8},"source":"src/modal.js","original":{"line":2,"column":10}},{"generated":{"line":15,"column":10},"source":"src/modal.js","original":{"line":2,"column":12}},{"generated":{"line":15,"column":18},"source":"src/modal.js","original":{"line":2,"column":20}},{"generated":{"line":16,"column":2},"source":"src/modal.js","original":{"line":3,"column":4},"name":"EXPENSE"},{"generated":{"line":16,"column":9},"source":"src/modal.js","original":{"line":3,"column":11}},{"generated":{"line":16,"column":11},"source":"src/modal.js","original":{"line":3,"column":13}},{"generated":{"line":17,"column":0},"source":"src/modal.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":1},"source":"src/modal.js","original":{"line":4,"column":1}},{"generated":{"line":18,"column":0},"source":"src/modal.js","original":{"line":4,"column":2}},{"generated":{"line":19,"column":0},"source":"src/modal.js","original":{"line":4,"column":2}},{"generated":{"line":19,"column":4},"source":"src/modal.js","original":{"line":6,"column":13},"name":"Transaction"},{"generated":{"line":19,"column":15},"source":"src/modal.js","original":{"line":6,"column":24}},{"generated":{"line":19,"column":44},"source":"src/modal.js","original":{"line":12,"column":4}},{"generated":{"line":19,"column":65},"source":"src/modal.js","original":{"line":12,"column":16},"name":"type"},{"generated":{"line":19,"column":69},"source":"src/modal.js","original":{"line":12,"column":20}},{"generated":{"line":19,"column":71},"source":"src/modal.js","original":{"line":12,"column":22},"name":"value"},{"generated":{"line":19,"column":76},"source":"src/modal.js","original":{"line":12,"column":27}},{"generated":{"line":19,"column":78},"source":"src/modal.js","original":{"line":12,"column":29}},{"generated":{"line":20,"column":2},"source":"src/modal.js","original":{"line":12,"column":29}},{"generated":{"line":21,"column":2},"source":"src/modal.js","original":{"line":12,"column":29}},{"generated":{"line":22,"column":2},"source":"src/modal.js","original":{"line":12,"column":29}},{"generated":{"line":23,"column":2},"source":"src/modal.js","original":{"line":12,"column":29}},{"generated":{"line":24,"column":2},"source":"src/modal.js","original":{"line":12,"column":29}},{"generated":{"line":25,"column":2},"source":"src/modal.js","original":{"line":13,"column":8}},{"generated":{"line":25,"column":6},"source":"src/modal.js","original":{"line":13,"column":12}},{"generated":{"line":25,"column":13},"source":"src/modal.js","original":{"line":13,"column":20},"name":"value"},{"generated":{"line":25,"column":18},"source":"src/modal.js","original":{"line":13,"column":26}},{"generated":{"line":25,"column":23},"source":"src/modal.js","original":{"line":13,"column":31}},{"generated":{"line":25,"column":31},"source":"src/modal.js","original":{"line":13,"column":39}},{"generated":{"line":25,"column":35},"source":"src/modal.js","original":{"line":13,"column":43},"name":"isNaN"},{"generated":{"line":25,"column":40},"source":"src/modal.js","original":{"line":13,"column":48}},{"generated":{"line":25,"column":41},"source":"src/modal.js","original":{"line":13,"column":49},"name":"value"},{"generated":{"line":25,"column":46},"source":"src/modal.js","original":{"line":13,"column":54}},{"generated":{"line":25,"column":47},"source":"src/modal.js","original":{"line":13,"column":55}},{"generated":{"line":25,"column":49},"source":"src/modal.js","original":{"line":13,"column":57}},{"generated":{"line":26,"column":4},"source":"src/modal.js","original":{"line":14,"column":12}},{"generated":{"line":26,"column":10},"source":"src/modal.js","original":{"line":14,"column":18}},{"generated":{"line":26,"column":14},"source":"src/modal.js","original":{"line":14,"column":22},"name":"TypeError"},{"generated":{"line":26,"column":23},"source":"src/modal.js","original":{"line":14,"column":31}},{"generated":{"line":26,"column":24},"source":"src/modal.js","original":{"line":14,"column":32}},{"generated":{"line":26,"column":50},"source":"src/modal.js","original":{"line":14,"column":58}},{"generated":{"line":26,"column":51},"source":"src/modal.js","original":{"line":14,"column":59}},{"generated":{"line":27,"column":2},"source":"src/modal.js","original":{"line":15,"column":8}},{"generated":{"line":28,"column":2},"source":"src/modal.js","original":{"line":16,"column":8}},{"generated":{"line":28,"column":6},"source":"src/modal.js","original":{"line":16,"column":12}},{"generated":{"line":28,"column":7},"source":"src/modal.js","original":{"line":16,"column":13},"name":"value"},{"generated":{"line":28,"column":12},"source":"src/modal.js","original":{"line":16,"column":18}},{"generated":{"line":28,"column":15},"source":"src/modal.js","original":{"line":16,"column":21},"name":"value"},{"generated":{"line":28,"column":20},"source":"src/modal.js","original":{"line":16,"column":26}},{"generated":{"line":29,"column":2},"source":"src/modal.js","original":{"line":17,"column":8}},{"generated":{"line":29,"column":6},"source":"src/modal.js","original":{"line":17,"column":12}},{"generated":{"line":29,"column":8},"source":"src/modal.js","original":{"line":17,"column":14},"name":"type"},{"generated":{"line":29,"column":12},"source":"src/modal.js","original":{"line":17,"column":18}},{"generated":{"line":29,"column":16},"source":"src/modal.js","original":{"line":17,"column":22},"name":"transactionType"},{"generated":{"line":29,"column":31},"source":"src/modal.js","original":{"line":17,"column":37}},{"generated":{"line":29,"column":32},"source":"src/modal.js","original":{"line":17,"column":38}},{"generated":{"line":29,"column":34},"source":"src/modal.js","original":{"line":17,"column":40}},{"generated":{"line":30,"column":4},"source":"src/modal.js","original":{"line":18,"column":12}},{"generated":{"line":30,"column":10},"source":"src/modal.js","original":{"line":18,"column":18}},{"generated":{"line":30,"column":14},"source":"src/modal.js","original":{"line":18,"column":22},"name":"TypeError"},{"generated":{"line":30,"column":23},"source":"src/modal.js","original":{"line":18,"column":31}},{"generated":{"line":30,"column":24},"source":"src/modal.js","original":{"line":18,"column":32}},{"generated":{"line":30,"column":60},"source":"src/modal.js","original":{"line":18,"column":68}},{"generated":{"line":30,"column":61},"source":"src/modal.js","original":{"line":18,"column":69}},{"generated":{"line":31,"column":2},"source":"src/modal.js","original":{"line":19,"column":8}},{"generated":{"line":32,"column":2},"source":"src/modal.js","original":{"line":20,"column":8}},{"generated":{"line":32,"column":6},"source":"src/modal.js","original":{"line":20,"column":12}},{"generated":{"line":32,"column":7},"source":"src/modal.js","original":{"line":20,"column":13},"name":"type"},{"generated":{"line":32,"column":11},"source":"src/modal.js","original":{"line":20,"column":17}},{"generated":{"line":32,"column":14},"source":"src/modal.js","original":{"line":20,"column":20},"name":"type"},{"generated":{"line":32,"column":18},"source":"src/modal.js","original":{"line":20,"column":24}},{"generated":{"line":33,"column":2},"source":"src/modal.js","original":{"line":21,"column":8}},{"generated":{"line":33,"column":6},"source":"src/modal.js","original":{"line":21,"column":12}},{"generated":{"line":33,"column":7},"source":"src/modal.js","original":{"line":21,"column":13},"name":"id"},{"generated":{"line":33,"column":9},"source":"src/modal.js","original":{"line":21,"column":15}},{"generated":{"line":33,"column":22},"source":"src/modal.js","original":{"line":21,"column":21},"name":"type"},{"generated":{"line":33,"column":26},"source":"src/modal.js","original":{"line":21,"column":25}},{"generated":{"line":33,"column":40},"source":"src/modal.js","original":{"line":21,"column":29},"name":"value"},{"generated":{"line":33,"column":45},"source":"src/modal.js","original":{"line":21,"column":34}},{"generated":{"line":33,"column":59},"source":"src/modal.js","original":{"line":21,"column":38},"name":"Math"},{"generated":{"line":33,"column":63},"source":"src/modal.js","original":{"line":21,"column":42}},{"generated":{"line":33,"column":64},"source":"src/modal.js","original":{"line":21,"column":43},"name":"random"},{"generated":{"line":33,"column":70},"source":"src/modal.js","original":{"line":21,"column":49}},{"generated":{"line":33,"column":72},"source":"src/modal.js","original":{"line":21,"column":51}},{"generated":{"line":33,"column":73},"source":"src/modal.js","original":{"line":21,"column":52},"name":"toFixed"},{"generated":{"line":33,"column":80},"source":"src/modal.js","original":{"line":21,"column":59}},{"generated":{"line":33,"column":81},"source":"src/modal.js","original":{"line":21,"column":60}},{"generated":{"line":33,"column":82},"source":"src/modal.js","original":{"line":21,"column":61}},{"generated":{"line":33,"column":83},"source":"src/modal.js","original":{"line":21,"column":62}},{"generated":{"line":33,"column":86},"source":"src/modal.js","original":{"line":21,"column":65}},{"generated":{"line":33,"column":89},"source":"src/modal.js","original":{"line":21,"column":68}},{"generated":{"line":33,"column":90},"source":"src/modal.js","original":{"line":21,"column":70}},{"generated":{"line":34,"column":2},"source":"src/modal.js","original":{"line":22,"column":8}},{"generated":{"line":34,"column":6},"source":"src/modal.js","original":{"line":22,"column":12}},{"generated":{"line":34,"column":7},"source":"src/modal.js","original":{"line":22,"column":13},"name":"timespan"},{"generated":{"line":34,"column":15},"source":"src/modal.js","original":{"line":22,"column":21}},{"generated":{"line":34,"column":18},"source":"src/modal.js","original":{"line":22,"column":24},"name":"Date"},{"generated":{"line":34,"column":22},"source":"src/modal.js","original":{"line":22,"column":28}},{"generated":{"line":34,"column":23},"source":"src/modal.js","original":{"line":22,"column":29},"name":"now"},{"generated":{"line":34,"column":26},"source":"src/modal.js","original":{"line":22,"column":32}},{"generated":{"line":34,"column":28},"source":"src/modal.js","original":{"line":22,"column":34}},{"generated":{"line":35,"column":0},"source":"src/modal.js","original":{"line":23,"column":4}},{"generated":{"line":35,"column":1},"source":"src/modal.js","original":{"line":23,"column":5}},{"generated":{"line":36,"column":0},"source":"src/modal.js","original":{"line":23,"column":5}}],"sources":{"src/modal.js":"export const transactionType = {\r\n    INCOME: \"INCOME\",\r\n    EXPENSE: \"EXPENSE\"\r\n};\r\n\r\nexport class Transaction {\r\n    value;\r\n    type;\r\n    id;\r\n    timespan;\r\n\r\n    constructor(type, value) {\r\n        if (typeof (value) !== \"number\" || isNaN(value)) {\r\n            throw new TypeError(\"value sholud be a number\");\r\n        }\r\n        this.value = value;\r\n        if (!(type in transactionType)) {\r\n            throw new TypeError(\"type sholud only INCOME or EXPENSE\")\r\n        }\r\n        this.type = type;\r\n        this.id = `${type}-${value}-${Math.random().toFixed(4) * 100}`;\r\n        this.timespan = Date.now();\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"28620807ce1b6c6dcf240b19bbb8491e","cacheData":{"env":{}}}